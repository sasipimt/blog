<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Sasipimt</title>
<link>https://sasipimt.github.io/blog/</link>
<atom:link href="https://sasipimt.github.io/blog/index.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.8.25</generator>
<lastBuildDate>Mon, 20 Oct 2025 00:00:00 GMT</lastBuildDate>
<item>
  <title>Mountain Classifier üèî</title>
  <dc:creator>Sasipim </dc:creator>
  <link>https://sasipimt.github.io/blog/posts/fastai/part1/mountain_classifier.html</link>
  <description><![CDATA[ 






<section id="mountain-classifier" class="level1">
<h1>Mountain classifier</h1>
<p>Inspired by <a href="https://course.fast.ai/Lessons/lesson1.html">fastai lesson1</a>, I want to create an image classifier. I love travelling and I think it will be challenging for a model to classify similar-looking mountains. So, I chose the Matterhorn, my favourite mountain. I searched the internet and found Mount Assiniboine, the Matterhorn of the Rockies.</p>
<section id="the-matterhorn-vs-mount-assiniboine" class="level2">
<h2 class="anchored" data-anchor-id="the-matterhorn-vs-mount-assiniboine">The Matterhorn vs Mount Assiniboine</h2>
<section id="step-1-download-images" class="level3">
<h3 class="anchored" data-anchor-id="step-1-download-images">Step 1: Download images</h3>
<div id="cell-10" class="cell" data-quarto-private-1="{&quot;key&quot;:&quot;execution&quot;,&quot;value&quot;:{&quot;iopub.execute_input&quot;:&quot;2025-10-21T08:47:36.579556Z&quot;,&quot;iopub.status.busy&quot;:&quot;2025-10-21T08:47:36.578606Z&quot;,&quot;iopub.status.idle&quot;:&quot;2025-10-21T08:47:36.585969Z&quot;,&quot;shell.execute_reply&quot;:&quot;2025-10-21T08:47:36.584941Z&quot;,&quot;shell.execute_reply.started&quot;:&quot;2025-10-21T08:47:36.579520Z&quot;}}" data-trusted="true" data-execution_count="7">
<div class="code-copy-outer-scaffold"><div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> ddgs <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> DDGS</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> fastcore.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">all</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span></span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> search_images(keywords, max_images<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>): <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> L(DDGS().images(keywords, max_results<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>max_images)).itemgot(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'image'</span>)</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> time, json</span></code></pre></div></div>
</div>
<p>To make it more challenging, I chose winter images. That way, the mountains are covered with snow and look more similar.</p>
<div id="cell-12" class="cell" data-quarto-private-1="{&quot;key&quot;:&quot;execution&quot;,&quot;value&quot;:{&quot;iopub.execute_input&quot;:&quot;2025-10-21T08:48:33.897801Z&quot;,&quot;iopub.status.busy&quot;:&quot;2025-10-21T08:48:33.897060Z&quot;,&quot;iopub.status.idle&quot;:&quot;2025-10-21T08:48:34.646245Z&quot;,&quot;shell.execute_reply&quot;:&quot;2025-10-21T08:48:34.645363Z&quot;,&quot;shell.execute_reply.started&quot;:&quot;2025-10-21T08:48:33.897772Z&quot;}}" data-outputid="e31ece64-d7fc-4415-ae56-2b3a3a880b7f" data-trusted="true" data-execution_count="10">
<div class="code-copy-outer-scaffold"><div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> fastdownload <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> download_url</span>
<span id="cb2-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> fastai.vision.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">all</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span></span>
<span id="cb2-3"></span>
<span id="cb2-4">download_url(search_images(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'matterhorn in winter'</span>, max_images<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'matterhorn.jpg'</span>, show_progress<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb2-5">Image.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'matterhorn.jpg'</span>).to_thumb(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">256</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">256</span>)</span></code></pre></div></div>
<div class="cell-output cell-output-display" data-execution_count="10">
<div>
<figure class="figure">
<p><img src="https://sasipimt.github.io/blog/posts/fastai/part1/mountain_classifier_files/figure-html/cell-8-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="cell-13" class="cell" data-quarto-private-1="{&quot;key&quot;:&quot;execution&quot;,&quot;value&quot;:{&quot;iopub.execute_input&quot;:&quot;2025-10-21T08:48:39.386546Z&quot;,&quot;iopub.status.busy&quot;:&quot;2025-10-21T08:48:39.385573Z&quot;,&quot;iopub.status.idle&quot;:&quot;2025-10-21T08:48:40.047329Z&quot;,&quot;shell.execute_reply&quot;:&quot;2025-10-21T08:48:40.046383Z&quot;,&quot;shell.execute_reply.started&quot;:&quot;2025-10-21T08:48:39.386512Z&quot;}}" data-outputid="16888cee-2fe7-4cb2-d43e-21a01947cddb" data-trusted="true" data-execution_count="11">
<div class="code-copy-outer-scaffold"><div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">download_url(search_images(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'assiniboine in winter'</span>, max_images<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'assiniboine.jpg'</span>, show_progress<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb3-2">Image.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'assiniboine.jpg'</span>).to_thumb(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">256</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">256</span>)</span></code></pre></div></div>
<div class="cell-output cell-output-display" data-execution_count="11">
<div>
<figure class="figure">
<p><img src="https://sasipimt.github.io/blog/posts/fastai/part1/mountain_classifier_files/figure-html/cell-9-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<p>Those mountains look similarüëçüèª. Next, I downloaded more images and saved them at <code>/mountains/matterhorn</code> and <code>/mountains/assiniboine</code>.</p>
<div id="cell-15" class="cell" data-quarto-private-1="{&quot;key&quot;:&quot;execution&quot;,&quot;value&quot;:{&quot;iopub.execute_input&quot;:&quot;2025-10-21T08:49:08.071448Z&quot;,&quot;iopub.status.busy&quot;:&quot;2025-10-21T08:49:08.070426Z&quot;,&quot;iopub.status.idle&quot;:&quot;2025-10-21T08:49:33.241670Z&quot;,&quot;shell.execute_reply&quot;:&quot;2025-10-21T08:49:33.240411Z&quot;,&quot;shell.execute_reply.started&quot;:&quot;2025-10-21T08:49:08.071421Z&quot;}}" data-trusted="true" data-execution_count="12">
<div class="code-copy-outer-scaffold"><div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">searches <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'matterhorn'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'assiniboine'</span></span>
<span id="cb4-2">path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mountains'</span>)</span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> o <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> searches:</span>
<span id="cb4-5">    dest <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>o)</span>
<span id="cb4-6">    dest.mkdir(exist_ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, parents<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb4-7">    download_images(dest, urls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>search_images(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>o<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> in winter'</span>))</span>
<span id="cb4-8">    time.sleep(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb4-9">    resize_images(path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>o, max_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">400</span>, dest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>o)</span></code></pre></div></div>
</div>
<p>Next, I verified images and removed corrupted images.</p>
<div id="cell-17" class="cell" data-quarto-private-1="{&quot;key&quot;:&quot;execution&quot;,&quot;value&quot;:{&quot;iopub.execute_input&quot;:&quot;2025-10-21T08:53:14.173675Z&quot;,&quot;iopub.status.busy&quot;:&quot;2025-10-21T08:53:14.172510Z&quot;,&quot;iopub.status.idle&quot;:&quot;2025-10-21T08:53:14.818524Z&quot;,&quot;shell.execute_reply&quot;:&quot;2025-10-21T08:53:14.817540Z&quot;,&quot;shell.execute_reply.started&quot;:&quot;2025-10-21T08:53:14.173597Z&quot;}}" data-outputid="126d99af-4de1-41cf-e0c1-de9c9eebd2ab" data-trusted="true" data-execution_count="13">
<div class="code-copy-outer-scaffold"><div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">failed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> verify_images(get_image_files(path))</span>
<span id="cb5-2">failed.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>(Path.unlink)</span>
<span id="cb5-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(failed)</span></code></pre></div></div>
<div class="cell-output cell-output-display" data-execution_count="13">
<pre><code>0</code></pre>
</div>
</div>
<p>Next, I used <code>DataBlock</code> to create <code>DataLoaders</code> and viewed sample images from it.</p>
<div id="cell-19" class="cell" data-quarto-private-1="{&quot;key&quot;:&quot;execution&quot;,&quot;value&quot;:{&quot;iopub.execute_input&quot;:&quot;2025-10-21T08:56:55.441387Z&quot;,&quot;iopub.status.busy&quot;:&quot;2025-10-21T08:56:55.440482Z&quot;,&quot;iopub.status.idle&quot;:&quot;2025-10-21T08:56:56.131820Z&quot;,&quot;shell.execute_reply&quot;:&quot;2025-10-21T08:56:56.130775Z&quot;,&quot;shell.execute_reply.started&quot;:&quot;2025-10-21T08:56:55.441352Z&quot;}}" data-outputid="2ac6bf8e-3834-4c81-fc06-cbd0dc687521" data-trusted="true" data-execution_count="19">
<div class="code-copy-outer-scaffold"><div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">dls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DataBlock(</span>
<span id="cb7-2">    blocks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(ImageBlock, CategoryBlock),</span>
<span id="cb7-3">    get_items<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>get_image_files,</span>
<span id="cb7-4">    splitter<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>RandomSplitter(valid_pct<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>, seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>),</span>
<span id="cb7-5">    get_y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>parent_label,</span>
<span id="cb7-6">    item_tfms<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[Resize(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">192</span>, method<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'squish'</span>)]</span>
<span id="cb7-7">).dataloaders(path, bs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>)</span>
<span id="cb7-8"></span>
<span id="cb7-9">dls.show_batch(max_n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>)</span></code></pre></div></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://sasipimt.github.io/blog/posts/fastai/part1/mountain_classifier_files/figure-html/cell-12-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="step-2-train-the-model" class="level3">
<h3 class="anchored" data-anchor-id="step-2-train-the-model">Step 2: Train the model</h3>
<div id="cell-21" class="cell" data-quarto-private-1="{&quot;key&quot;:&quot;execution&quot;,&quot;value&quot;:{&quot;iopub.execute_input&quot;:&quot;2025-10-21T09:01:02.333630Z&quot;,&quot;iopub.status.busy&quot;:&quot;2025-10-21T09:01:02.332929Z&quot;,&quot;iopub.status.idle&quot;:&quot;2025-10-21T09:03:04.280212Z&quot;,&quot;shell.execute_reply&quot;:&quot;2025-10-21T09:03:04.279149Z&quot;,&quot;shell.execute_reply.started&quot;:&quot;2025-10-21T09:01:02.333605Z&quot;}}" data-outputid="2fee918c-2ae1-4b37-ce51-0bea0ee6a7cd" data-trusted="true" data-execution_count="24">
<div class="code-copy-outer-scaffold"><div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">learn <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> vision_learner(dls, resnet18, metrics<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>error_rate)</span>
<span id="cb8-2">learn.fine_tune(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span></code></pre></div></div>
<div class="cell-output cell-output-display">

<style>
    /* Turns off some styling */
    progress {
        /* gets rid of default border in Firefox and Opera. */
        border: none;
        /* Needs to be in here for Safari polyfill so background images work as expected. */
        background-size: auto;
    }
    progress:not([value]), progress:not([value])::-webkit-progress-bar {
        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);
    }
    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {
        background: #F44336;
    }
</style>
</div>
<div class="cell-output cell-output-display">
<table class="dataframe caption-top table table-sm table-striped small" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th">epoch</th>
<th data-quarto-table-cell-role="th">train_loss</th>
<th data-quarto-table-cell-role="th">valid_loss</th>
<th data-quarto-table-cell-role="th">error_rate</th>
<th data-quarto-table-cell-role="th">time</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>0</td>
<td>1.326607</td>
<td>0.827004</td>
<td>0.411765</td>
<td>00:14</td>
</tr>
</tbody>
</table>
</div>
<div class="cell-output cell-output-display">

<style>
    /* Turns off some styling */
    progress {
        /* gets rid of default border in Firefox and Opera. */
        border: none;
        /* Needs to be in here for Safari polyfill so background images work as expected. */
        background-size: auto;
    }
    progress:not([value]), progress:not([value])::-webkit-progress-bar {
        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);
    }
    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {
        background: #F44336;
    }
</style>
</div>
<div class="cell-output cell-output-display">
<table class="dataframe caption-top table table-sm table-striped small" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th">epoch</th>
<th data-quarto-table-cell-role="th">train_loss</th>
<th data-quarto-table-cell-role="th">valid_loss</th>
<th data-quarto-table-cell-role="th">error_rate</th>
<th data-quarto-table-cell-role="th">time</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>0</td>
<td>0.460767</td>
<td>0.435698</td>
<td>0.235294</td>
<td>00:21</td>
</tr>
<tr class="even">
<td>1</td>
<td>0.308592</td>
<td>0.249649</td>
<td>0.088235</td>
<td>00:21</td>
</tr>
<tr class="odd">
<td>2</td>
<td>0.224121</td>
<td>0.258147</td>
<td>0.117647</td>
<td>00:21</td>
</tr>
<tr class="even">
<td>3</td>
<td>0.180325</td>
<td>0.252384</td>
<td>0.117647</td>
<td>00:21</td>
</tr>
<tr class="odd">
<td>4</td>
<td>0.144590</td>
<td>0.231590</td>
<td>0.117647</td>
<td>00:21</td>
</tr>
</tbody>
</table>
</div>
</div>
</section>
<section id="step-3-use-the-model-for-prediction" class="level3">
<h3 class="anchored" data-anchor-id="step-3-use-the-model-for-prediction">Step 3: Use the model for prediction</h3>
<div id="cell-23" class="cell" data-quarto-private-1="{&quot;key&quot;:&quot;execution&quot;,&quot;value&quot;:{&quot;iopub.execute_input&quot;:&quot;2025-10-21T10:09:31.657871Z&quot;,&quot;iopub.status.busy&quot;:&quot;2025-10-21T10:09:31.657446Z&quot;,&quot;iopub.status.idle&quot;:&quot;2025-10-21T10:09:31.776175Z&quot;,&quot;shell.execute_reply&quot;:&quot;2025-10-21T10:09:31.775319Z&quot;,&quot;shell.execute_reply.started&quot;:&quot;2025-10-21T10:09:31.657832Z&quot;}}" data-trusted="true" data-execution_count="25">
<div class="code-copy-outer-scaffold"><div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">is_matterhorn,_,probs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> learn.predict(PILImage.create(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'matterhorn.jpg'</span>))</span>
<span id="cb9-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"This is a: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>is_matterhorn<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">."</span>)</span>
<span id="cb9-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Probability it's a matterhorn: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>probs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.4f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div></div>
<div class="cell-output cell-output-display">

<style>
    /* Turns off some styling */
    progress {
        /* gets rid of default border in Firefox and Opera. */
        border: none;
        /* Needs to be in here for Safari polyfill so background images work as expected. */
        background-size: auto;
    }
    progress:not([value]), progress:not([value])::-webkit-progress-bar {
        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);
    }
    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {
        background: #F44336;
    }
</style>
</div>
<div class="cell-output cell-output-display">

</div>
<div class="cell-output cell-output-stdout">
<pre><code>This is a: matterhorn.
Probability it's a matterhorn: 0.0000</code></pre>
</div>
</div>
<div id="cell-24" class="cell" data-quarto-private-1="{&quot;key&quot;:&quot;execution&quot;,&quot;value&quot;:{&quot;iopub.execute_input&quot;:&quot;2025-10-21T10:09:34.444410Z&quot;,&quot;iopub.status.busy&quot;:&quot;2025-10-21T10:09:34.444114Z&quot;,&quot;iopub.status.idle&quot;:&quot;2025-10-21T10:09:34.539610Z&quot;,&quot;shell.execute_reply&quot;:&quot;2025-10-21T10:09:34.538675Z&quot;,&quot;shell.execute_reply.started&quot;:&quot;2025-10-21T10:09:34.444390Z&quot;}}" data-trusted="true" data-execution_count="26">
<div class="code-copy-outer-scaffold"><div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">is_matterhorn,_,probs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> learn.predict(PILImage.create(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'assiniboine.jpg'</span>))</span>
<span id="cb11-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"This is a: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>is_matterhorn<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">."</span>)</span>
<span id="cb11-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Probability it's a assiniboine: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>probs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.4f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div></div>
<div class="cell-output cell-output-display">

<style>
    /* Turns off some styling */
    progress {
        /* gets rid of default border in Firefox and Opera. */
        border: none;
        /* Needs to be in here for Safari polyfill so background images work as expected. */
        background-size: auto;
    }
    progress:not([value]), progress:not([value])::-webkit-progress-bar {
        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);
    }
    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {
        background: #F44336;
    }
</style>
</div>
<div class="cell-output cell-output-display">

</div>
<div class="cell-output cell-output-stdout">
<pre><code>This is a: matterhorn.
Probability it's a assiniboine: 0.6165</code></pre>
</div>
</div>
<p>The result was confusing at first. For the Matterhorn image, the model predicted that it was the Matterhorn, but the probability that it‚Äôs the Matterhorn is 0. Also, for the Mount Assiniboine image, the model predicted that it was the Matterhorn, but the probability that it‚Äôs Mount Assiniboine is 0.6165.</p>
<p>I thought class 0 was Matterhorn and class 1 was Assiniboine since I downloaded the Matterhorn images first. However, after reading the <a href="https://docs.fast.ai/data.block.html#categoryblock">fastai doc</a> and discovering that the <code>CategoryBlock</code> sorts classes alphabetically if not specified. That‚Äôs why class 0 is Assiniboine and class 1 is Matterhorn.</p>
<p>We can check the class index and class name mapping by using the <code>vocab</code> attribute of the <code>DataLoaders</code></p>
<div id="cell-28" class="cell" data-quarto-private-1="{&quot;key&quot;:&quot;execution&quot;,&quot;value&quot;:{&quot;iopub.execute_input&quot;:&quot;2025-10-21T11:15:55.460925Z&quot;,&quot;iopub.status.busy&quot;:&quot;2025-10-21T11:15:55.459925Z&quot;,&quot;iopub.status.idle&quot;:&quot;2025-10-21T11:15:55.465939Z&quot;,&quot;shell.execute_reply&quot;:&quot;2025-10-21T11:15:55.464956Z&quot;,&quot;shell.execute_reply.started&quot;:&quot;2025-10-21T11:15:55.460892Z&quot;}}" data-trusted="true" data-execution_count="49">
<div class="code-copy-outer-scaffold"><div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Class names: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>dls<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>vocab<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div></div>
<div class="cell-output cell-output-stdout">
<pre><code>Class names: ['assiniboine', 'matterhorn']</code></pre>
</div>
</div>
<p>So I fixed the code using the class index and label from the <code>vocab</code></p>
<div id="cell-30" class="cell" data-quarto-private-1="{&quot;key&quot;:&quot;execution&quot;,&quot;value&quot;:{&quot;iopub.execute_input&quot;:&quot;2025-10-21T11:18:32.368821Z&quot;,&quot;iopub.status.busy&quot;:&quot;2025-10-21T11:18:32.368046Z&quot;,&quot;iopub.status.idle&quot;:&quot;2025-10-21T11:18:32.549367Z&quot;,&quot;shell.execute_reply&quot;:&quot;2025-10-21T11:18:32.548600Z&quot;,&quot;shell.execute_reply.started&quot;:&quot;2025-10-21T11:18:32.368791Z&quot;}}" data-trusted="true" data-execution_count="51">
<div class="code-copy-outer-scaffold"><div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, class_name <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(dls.vocab):</span>
<span id="cb15-2">    mountain_name,_,probs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> learn.predict(PILImage.create(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>class_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.jpg"</span>))</span>
<span id="cb15-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"This is a: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>class_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">."</span>)</span>
<span id="cb15-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Model predicts that it is a: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>mountain_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">."</span>)</span>
<span id="cb15-5">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Probability it's a </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>class_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>probs[i]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.4f}</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div></div>
<div class="cell-output cell-output-display">

<style>
    /* Turns off some styling */
    progress {
        /* gets rid of default border in Firefox and Opera. */
        border: none;
        /* Needs to be in here for Safari polyfill so background images work as expected. */
        background-size: auto;
    }
    progress:not([value]), progress:not([value])::-webkit-progress-bar {
        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);
    }
    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {
        background: #F44336;
    }
</style>
</div>
<div class="cell-output cell-output-display">

</div>
<div class="cell-output cell-output-stdout">
<pre><code>This is a: assiniboine.
Model predicts that it is a: matterhorn.
Probability it's a assiniboine: 0.3835
</code></pre>
</div>
<div class="cell-output cell-output-display">

<style>
    /* Turns off some styling */
    progress {
        /* gets rid of default border in Firefox and Opera. */
        border: none;
        /* Needs to be in here for Safari polyfill so background images work as expected. */
        background-size: auto;
    }
    progress:not([value]), progress:not([value])::-webkit-progress-bar {
        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);
    }
    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {
        background: #F44336;
    }
</style>
</div>
<div class="cell-output cell-output-display">

</div>
<div class="cell-output cell-output-stdout">
<pre><code>This is a: matterhorn.
Model predicts that it is a: matterhorn.
Probability it's a matterhorn: 1.0000
</code></pre>
</div>
</div>
<p>But if we want class 0 to be Matterhorn and class 1 to be Assiniboine, we can pass the class name to the <code>vocab</code> of the <code>CategoryBlock</code> and set <code>sort=False</code>.</p>
<div id="cell-32" class="cell" data-quarto-private-1="{&quot;key&quot;:&quot;execution&quot;,&quot;value&quot;:{&quot;iopub.execute_input&quot;:&quot;2025-10-21T11:05:10.975339Z&quot;,&quot;iopub.status.busy&quot;:&quot;2025-10-21T11:05:10.975008Z&quot;,&quot;iopub.status.idle&quot;:&quot;2025-10-21T11:05:10.994917Z&quot;,&quot;shell.execute_reply&quot;:&quot;2025-10-21T11:05:10.994011Z&quot;,&quot;shell.execute_reply.started&quot;:&quot;2025-10-21T11:05:10.975314Z&quot;}}" data-trusted="true" data-execution_count="45">
<div class="code-copy-outer-scaffold"><div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1">dls2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DataBlock(</span>
<span id="cb18-2">    blocks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(ImageBlock, CategoryBlock(vocab<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'matterhorn'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'assiniboine'</span>], sort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)),</span>
<span id="cb18-3">    get_items<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>get_image_files,</span>
<span id="cb18-4">    splitter<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>RandomSplitter(valid_pct<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>, seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>),</span>
<span id="cb18-5">    get_y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>parent_label,</span>
<span id="cb18-6">    item_tfms<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[Resize(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">192</span>, method<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'squish'</span>)]</span>
<span id="cb18-7">).dataloaders(path, bs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>)</span></code></pre></div></div>
</div>
<div id="cell-33" class="cell" data-quarto-private-1="{&quot;key&quot;:&quot;execution&quot;,&quot;value&quot;:{&quot;iopub.execute_input&quot;:&quot;2025-10-21T11:05:12.796110Z&quot;,&quot;iopub.status.busy&quot;:&quot;2025-10-21T11:05:12.795490Z&quot;,&quot;iopub.status.idle&quot;:&quot;2025-10-21T11:05:12.800967Z&quot;,&quot;shell.execute_reply&quot;:&quot;2025-10-21T11:05:12.800048Z&quot;,&quot;shell.execute_reply.started&quot;:&quot;2025-10-21T11:05:12.796083Z&quot;}}" data-trusted="true" data-execution_count="46">
<div class="code-copy-outer-scaffold"><div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Class names: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>dls2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>vocab<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div></div>
<div class="cell-output cell-output-stdout">
<pre><code>Class names: ['matterhorn', 'assiniboine']</code></pre>
</div>
</div>
<p>However, the model‚Äôs result is not good enough. It predicted wrong, so I will fine-tune it more.</p>
<div id="cell-35" class="cell" data-quarto-private-1="{&quot;key&quot;:&quot;execution&quot;,&quot;value&quot;:{&quot;iopub.execute_input&quot;:&quot;2025-10-21T11:28:58.010293Z&quot;,&quot;iopub.status.busy&quot;:&quot;2025-10-21T11:28:58.009413Z&quot;,&quot;iopub.status.idle&quot;:&quot;2025-10-21T11:30:19.426749Z&quot;,&quot;shell.execute_reply&quot;:&quot;2025-10-21T11:30:19.425730Z&quot;,&quot;shell.execute_reply.started&quot;:&quot;2025-10-21T11:28:58.010261Z&quot;}}" data-trusted="true" data-execution_count="52">
<div class="code-copy-outer-scaffold"><div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1">learn.fine_tune(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span></code></pre></div></div>
<div class="cell-output cell-output-display">

<style>
    /* Turns off some styling */
    progress {
        /* gets rid of default border in Firefox and Opera. */
        border: none;
        /* Needs to be in here for Safari polyfill so background images work as expected. */
        background-size: auto;
    }
    progress:not([value]), progress:not([value])::-webkit-progress-bar {
        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);
    }
    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {
        background: #F44336;
    }
</style>
</div>
<div class="cell-output cell-output-display">
<table class="dataframe caption-top table table-sm table-striped small" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th">epoch</th>
<th data-quarto-table-cell-role="th">train_loss</th>
<th data-quarto-table-cell-role="th">valid_loss</th>
<th data-quarto-table-cell-role="th">error_rate</th>
<th data-quarto-table-cell-role="th">time</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>0</td>
<td>0.013699</td>
<td>0.264133</td>
<td>0.117647</td>
<td>00:12</td>
</tr>
</tbody>
</table>
</div>
<div class="cell-output cell-output-display">

<style>
    /* Turns off some styling */
    progress {
        /* gets rid of default border in Firefox and Opera. */
        border: none;
        /* Needs to be in here for Safari polyfill so background images work as expected. */
        background-size: auto;
    }
    progress:not([value]), progress:not([value])::-webkit-progress-bar {
        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);
    }
    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {
        background: #F44336;
    }
</style>
</div>
<div class="cell-output cell-output-display">
<table class="dataframe caption-top table table-sm table-striped small" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th">epoch</th>
<th data-quarto-table-cell-role="th">train_loss</th>
<th data-quarto-table-cell-role="th">valid_loss</th>
<th data-quarto-table-cell-role="th">error_rate</th>
<th data-quarto-table-cell-role="th">time</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>0</td>
<td>0.013848</td>
<td>0.313575</td>
<td>0.117647</td>
<td>00:14</td>
</tr>
<tr class="even">
<td>1</td>
<td>0.010381</td>
<td>0.432843</td>
<td>0.147059</td>
<td>00:13</td>
</tr>
<tr class="odd">
<td>2</td>
<td>0.013321</td>
<td>0.674214</td>
<td>0.235294</td>
<td>00:13</td>
</tr>
<tr class="even">
<td>3</td>
<td>0.010601</td>
<td>0.601326</td>
<td>0.205882</td>
<td>00:13</td>
</tr>
<tr class="odd">
<td>4</td>
<td>0.009109</td>
<td>0.330560</td>
<td>0.117647</td>
<td>00:13</td>
</tr>
</tbody>
</table>
</div>
</div>
<div id="cell-36" class="cell" data-quarto-private-1="{&quot;key&quot;:&quot;execution&quot;,&quot;value&quot;:{&quot;iopub.execute_input&quot;:&quot;2025-10-21T11:32:21.768280Z&quot;,&quot;iopub.status.busy&quot;:&quot;2025-10-21T11:32:21.767749Z&quot;,&quot;iopub.status.idle&quot;:&quot;2025-10-21T11:32:21.990883Z&quot;,&quot;shell.execute_reply&quot;:&quot;2025-10-21T11:32:21.989889Z&quot;,&quot;shell.execute_reply.started&quot;:&quot;2025-10-21T11:32:21.768241Z&quot;}}" data-trusted="true" data-execution_count="53">
<div class="code-copy-outer-scaffold"><div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, class_name <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(dls.vocab):</span>
<span id="cb22-2">    mountain_name,_,probs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> learn.predict(PILImage.create(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>class_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.jpg"</span>))</span>
<span id="cb22-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"This is a: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>class_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">."</span>)</span>
<span id="cb22-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Model predicts that it is a: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>mountain_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">."</span>)</span>
<span id="cb22-5">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Probability it's a </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>class_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>probs[i]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.4f}</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div></div>
<div class="cell-output cell-output-display">

<style>
    /* Turns off some styling */
    progress {
        /* gets rid of default border in Firefox and Opera. */
        border: none;
        /* Needs to be in here for Safari polyfill so background images work as expected. */
        background-size: auto;
    }
    progress:not([value]), progress:not([value])::-webkit-progress-bar {
        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);
    }
    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {
        background: #F44336;
    }
</style>
</div>
<div class="cell-output cell-output-display">

</div>
<div class="cell-output cell-output-stdout">
<pre><code>This is a: assiniboine.
Model predicts that it is a: assiniboine.
Probability it's a assiniboine: 0.9114
</code></pre>
</div>
<div class="cell-output cell-output-display">

<style>
    /* Turns off some styling */
    progress {
        /* gets rid of default border in Firefox and Opera. */
        border: none;
        /* Needs to be in here for Safari polyfill so background images work as expected. */
        background-size: auto;
    }
    progress:not([value]), progress:not([value])::-webkit-progress-bar {
        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);
    }
    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {
        background: #F44336;
    }
</style>
</div>
<div class="cell-output cell-output-display">

</div>
<div class="cell-output cell-output-stdout">
<pre><code>This is a: matterhorn.
Model predicts that it is a: matterhorn.
Probability it's a matterhorn: 0.9913
</code></pre>
</div>
</div>
<p>Better. It predicted correctly this timeüéâ.</p>
</section>
</section>
<section id="multiclass-classification" class="level2">
<h2 class="anchored" data-anchor-id="multiclass-classification">Multiclass Classification</h2>
<p>To make it more challenging, I want a model that can classify many mountains.</p>
<section id="step-1-download-images-1" class="level3">
<h3 class="anchored" data-anchor-id="step-1-download-images-1">Step 1: Download images</h3>
<p>I downloaded two more mountain images: Mont Blanc and Titlis.</p>
<div id="cell-42" class="cell" data-quarto-private-1="{&quot;key&quot;:&quot;execution&quot;,&quot;value&quot;:{&quot;iopub.execute_input&quot;:&quot;2025-10-21T11:41:21.263697Z&quot;,&quot;iopub.status.busy&quot;:&quot;2025-10-21T11:41:21.260759Z&quot;,&quot;iopub.status.idle&quot;:&quot;2025-10-21T11:41:22.224684Z&quot;,&quot;shell.execute_reply&quot;:&quot;2025-10-21T11:41:22.223382Z&quot;,&quot;shell.execute_reply.started&quot;:&quot;2025-10-21T11:41:21.263611Z&quot;}}" data-trusted="true" data-execution_count="54">
<div class="code-copy-outer-scaffold"><div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1">download_url(search_images(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mont blanc in winter'</span>, max_images<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mont blanc.jpg'</span>, show_progress<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb25-2">Image.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mont blanc.jpg'</span>).to_thumb(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">256</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">256</span>)</span></code></pre></div></div>
<div class="cell-output cell-output-display" data-execution_count="54">
<div>
<figure class="figure">
<p><img src="https://sasipimt.github.io/blog/posts/fastai/part1/mountain_classifier_files/figure-html/cell-22-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<div id="cell-43" class="cell" data-quarto-private-1="{&quot;key&quot;:&quot;execution&quot;,&quot;value&quot;:{&quot;iopub.execute_input&quot;:&quot;2025-10-21T11:41:26.328590Z&quot;,&quot;iopub.status.busy&quot;:&quot;2025-10-21T11:41:26.327532Z&quot;,&quot;iopub.status.idle&quot;:&quot;2025-10-21T11:41:27.201197Z&quot;,&quot;shell.execute_reply&quot;:&quot;2025-10-21T11:41:27.200259Z&quot;,&quot;shell.execute_reply.started&quot;:&quot;2025-10-21T11:41:26.328558Z&quot;}}" data-trusted="true" data-execution_count="55">
<div class="code-copy-outer-scaffold"><div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1">download_url(search_images(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'titlis in winter'</span>, max_images<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'titlis.jpg'</span>, show_progress<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb26-2">Image.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'titlis.jpg'</span>).to_thumb(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">256</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">256</span>)</span></code></pre></div></div>
<div class="cell-output cell-output-display" data-execution_count="55">
<div>
<figure class="figure">
<p><img src="https://sasipimt.github.io/blog/posts/fastai/part1/mountain_classifier_files/figure-html/cell-23-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
<p>Then, I downloaded and saved the new images in the same parent folder <code>/mountains</code>.</p>
<pre><code>‚îî‚îÄ‚îÄ mountains/
    ‚îú‚îÄ‚îÄ matterhorn/
    ‚îú‚îÄ‚îÄ assiniboine/
    ‚îú‚îÄ‚îÄ mont blanc/ 
    ‚îî‚îÄ‚îÄ titlis/</code></pre>
<p>The rest is the same as binary classification above.</p>
<div id="cell-45" class="cell" data-quarto-private-1="{&quot;key&quot;:&quot;execution&quot;,&quot;value&quot;:{&quot;iopub.execute_input&quot;:&quot;2025-10-21T11:54:50.631344Z&quot;,&quot;iopub.status.busy&quot;:&quot;2025-10-21T11:54:50.630341Z&quot;,&quot;iopub.status.idle&quot;:&quot;2025-10-21T11:55:19.556211Z&quot;,&quot;shell.execute_reply&quot;:&quot;2025-10-21T11:55:19.554789Z&quot;,&quot;shell.execute_reply.started&quot;:&quot;2025-10-21T11:54:50.631309Z&quot;}}" data-trusted="true" data-execution_count="56">
<div class="code-copy-outer-scaffold"><div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1">searches <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mont blanc'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'titlis'</span></span>
<span id="cb28-2">path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mountains'</span>)</span>
<span id="cb28-3"></span>
<span id="cb28-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> o <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> searches:</span>
<span id="cb28-5">    dest <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>o)</span>
<span id="cb28-6">    dest.mkdir(exist_ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, parents<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb28-7">    download_images(dest, urls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>search_images(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>o<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> in winter'</span>))</span>
<span id="cb28-8">    time.sleep(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb28-9">    resize_images(path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>o, max_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">400</span>, dest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>o)</span></code></pre></div></div>
</div>
<div id="cell-46" class="cell" data-quarto-private-1="{&quot;key&quot;:&quot;execution&quot;,&quot;value&quot;:{&quot;iopub.execute_input&quot;:&quot;2025-10-21T11:55:19.558931Z&quot;,&quot;iopub.status.busy&quot;:&quot;2025-10-21T11:55:19.558512Z&quot;,&quot;iopub.status.idle&quot;:&quot;2025-10-21T11:55:20.478078Z&quot;,&quot;shell.execute_reply&quot;:&quot;2025-10-21T11:55:20.477060Z&quot;,&quot;shell.execute_reply.started&quot;:&quot;2025-10-21T11:55:19.558897Z&quot;}}" data-trusted="true" data-execution_count="57">
<div class="code-copy-outer-scaffold"><div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb29-1">failed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> verify_images(get_image_files(path))</span>
<span id="cb29-2">failed.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>(Path.unlink)</span>
<span id="cb29-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(failed)</span></code></pre></div></div>
<div class="cell-output cell-output-display" data-execution_count="57">
<pre><code>1</code></pre>
</div>
</div>
<div id="cell-47" class="cell" data-quarto-private-1="{&quot;key&quot;:&quot;execution&quot;,&quot;value&quot;:{&quot;iopub.execute_input&quot;:&quot;2025-10-21T11:55:26.333889Z&quot;,&quot;iopub.status.busy&quot;:&quot;2025-10-21T11:55:26.333355Z&quot;,&quot;iopub.status.idle&quot;:&quot;2025-10-21T11:55:27.637936Z&quot;,&quot;shell.execute_reply&quot;:&quot;2025-10-21T11:55:27.636727Z&quot;,&quot;shell.execute_reply.started&quot;:&quot;2025-10-21T11:55:26.333854Z&quot;}}" data-trusted="true" data-execution_count="58">
<div class="code-copy-outer-scaffold"><div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb31-1">dls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DataBlock(</span>
<span id="cb31-2">    blocks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(ImageBlock, CategoryBlock),</span>
<span id="cb31-3">    get_items<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>get_image_files,</span>
<span id="cb31-4">    splitter<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>RandomSplitter(valid_pct<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>, seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>),</span>
<span id="cb31-5">    get_y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>parent_label,</span>
<span id="cb31-6">    item_tfms<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[Resize(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">192</span>, method<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'squish'</span>)]</span>
<span id="cb31-7">).dataloaders(path, bs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>)</span>
<span id="cb31-8"></span>
<span id="cb31-9">dls.show_batch(max_n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)</span></code></pre></div></div>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://sasipimt.github.io/blog/posts/fastai/part1/mountain_classifier_files/figure-html/cell-26-output-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="step-2-train-the-model-1" class="level3">
<h3 class="anchored" data-anchor-id="step-2-train-the-model-1">Step 2: Train the model</h3>
<div id="cell-49" class="cell" data-quarto-private-1="{&quot;key&quot;:&quot;execution&quot;,&quot;value&quot;:{&quot;iopub.execute_input&quot;:&quot;2025-10-21T12:07:32.918794Z&quot;,&quot;iopub.status.busy&quot;:&quot;2025-10-21T12:07:32.918331Z&quot;,&quot;iopub.status.idle&quot;:&quot;2025-10-21T12:24:20.009977Z&quot;,&quot;shell.execute_reply&quot;:&quot;2025-10-21T12:24:20.008739Z&quot;,&quot;shell.execute_reply.started&quot;:&quot;2025-10-21T12:07:32.918755Z&quot;}}" data-trusted="true" data-execution_count="60">
<div class="code-copy-outer-scaffold"><div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb32-1">learn <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> vision_learner(dls, resnet101, metrics<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>error_rate)</span>
<span id="cb32-2">learn.fine_tune(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span></code></pre></div></div>
<div class="cell-output cell-output-display">

<style>
    /* Turns off some styling */
    progress {
        /* gets rid of default border in Firefox and Opera. */
        border: none;
        /* Needs to be in here for Safari polyfill so background images work as expected. */
        background-size: auto;
    }
    progress:not([value]), progress:not([value])::-webkit-progress-bar {
        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);
    }
    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {
        background: #F44336;
    }
</style>
</div>
<div class="cell-output cell-output-display">
<table class="dataframe caption-top table table-sm table-striped small" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th">epoch</th>
<th data-quarto-table-cell-role="th">train_loss</th>
<th data-quarto-table-cell-role="th">valid_loss</th>
<th data-quarto-table-cell-role="th">error_rate</th>
<th data-quarto-table-cell-role="th">time</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>0</td>
<td>2.270211</td>
<td>1.331686</td>
<td>0.485714</td>
<td>02:05</td>
</tr>
</tbody>
</table>
</div>
<div class="cell-output cell-output-display">

<style>
    /* Turns off some styling */
    progress {
        /* gets rid of default border in Firefox and Opera. */
        border: none;
        /* Needs to be in here for Safari polyfill so background images work as expected. */
        background-size: auto;
    }
    progress:not([value]), progress:not([value])::-webkit-progress-bar {
        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);
    }
    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {
        background: #F44336;
    }
</style>
</div>
<div class="cell-output cell-output-display">
<table class="dataframe caption-top table table-sm table-striped small" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th">epoch</th>
<th data-quarto-table-cell-role="th">train_loss</th>
<th data-quarto-table-cell-role="th">valid_loss</th>
<th data-quarto-table-cell-role="th">error_rate</th>
<th data-quarto-table-cell-role="th">time</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>0</td>
<td>0.645704</td>
<td>0.985022</td>
<td>0.342857</td>
<td>02:53</td>
</tr>
<tr class="even">
<td>1</td>
<td>0.422413</td>
<td>0.975001</td>
<td>0.271429</td>
<td>03:01</td>
</tr>
<tr class="odd">
<td>2</td>
<td>0.340291</td>
<td>0.947498</td>
<td>0.257143</td>
<td>02:53</td>
</tr>
<tr class="even">
<td>3</td>
<td>0.259572</td>
<td>0.723719</td>
<td>0.200000</td>
<td>02:55</td>
</tr>
<tr class="odd">
<td>4</td>
<td>0.203068</td>
<td>0.686363</td>
<td>0.185714</td>
<td>02:57</td>
</tr>
</tbody>
</table>
</div>
</div>
</section>
<section id="step-3-use-the-model-for-prediction-1" class="level3">
<h3 class="anchored" data-anchor-id="step-3-use-the-model-for-prediction-1">Step 3: Use the model for prediction</h3>
<div id="cell-51" class="cell" data-quarto-private-1="{&quot;key&quot;:&quot;execution&quot;,&quot;value&quot;:{&quot;iopub.execute_input&quot;:&quot;2025-10-21T12:24:50.852821Z&quot;,&quot;iopub.status.busy&quot;:&quot;2025-10-21T12:24:50.852440Z&quot;,&quot;iopub.status.idle&quot;:&quot;2025-10-21T12:24:52.193321Z&quot;,&quot;shell.execute_reply&quot;:&quot;2025-10-21T12:24:52.192365Z&quot;,&quot;shell.execute_reply.started&quot;:&quot;2025-10-21T12:24:50.852790Z&quot;}}" data-trusted="true" data-execution_count="61">
<div class="code-copy-outer-scaffold"><div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb33-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, class_name <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(dls.vocab):</span>
<span id="cb33-2">    mountain_name,_,probs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> learn.predict(PILImage.create(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>class_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.jpg"</span>))</span>
<span id="cb33-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"This is a: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>class_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">."</span>)</span>
<span id="cb33-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Model predicts that it is a: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>mountain_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">."</span>)</span>
<span id="cb33-5">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Probability it's a </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>class_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>probs[i]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.4f}</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div></div>
<div class="cell-output cell-output-display">

<style>
    /* Turns off some styling */
    progress {
        /* gets rid of default border in Firefox and Opera. */
        border: none;
        /* Needs to be in here for Safari polyfill so background images work as expected. */
        background-size: auto;
    }
    progress:not([value]), progress:not([value])::-webkit-progress-bar {
        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);
    }
    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {
        background: #F44336;
    }
</style>
</div>
<div class="cell-output cell-output-display">

</div>
<div class="cell-output cell-output-stdout">
<pre><code>This is a: assiniboine.
Model predicts that it is a: mont blanc.
Probability it's a assiniboine: 0.3844
</code></pre>
</div>
<div class="cell-output cell-output-display">

<style>
    /* Turns off some styling */
    progress {
        /* gets rid of default border in Firefox and Opera. */
        border: none;
        /* Needs to be in here for Safari polyfill so background images work as expected. */
        background-size: auto;
    }
    progress:not([value]), progress:not([value])::-webkit-progress-bar {
        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);
    }
    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {
        background: #F44336;
    }
</style>
</div>
<div class="cell-output cell-output-display">

</div>
<div class="cell-output cell-output-stdout">
<pre><code>This is a: matterhorn.
Model predicts that it is a: matterhorn.
Probability it's a matterhorn: 1.0000
</code></pre>
</div>
<div class="cell-output cell-output-display">

<style>
    /* Turns off some styling */
    progress {
        /* gets rid of default border in Firefox and Opera. */
        border: none;
        /* Needs to be in here for Safari polyfill so background images work as expected. */
        background-size: auto;
    }
    progress:not([value]), progress:not([value])::-webkit-progress-bar {
        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);
    }
    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {
        background: #F44336;
    }
</style>
</div>
<div class="cell-output cell-output-display">

</div>
<div class="cell-output cell-output-stdout">
<pre><code>This is a: mont blanc.
Model predicts that it is a: mont blanc.
Probability it's a mont blanc: 1.0000
</code></pre>
</div>
<div class="cell-output cell-output-display">

<style>
    /* Turns off some styling */
    progress {
        /* gets rid of default border in Firefox and Opera. */
        border: none;
        /* Needs to be in here for Safari polyfill so background images work as expected. */
        background-size: auto;
    }
    progress:not([value]), progress:not([value])::-webkit-progress-bar {
        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);
    }
    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {
        background: #F44336;
    }
</style>
</div>
<div class="cell-output cell-output-display">

</div>
<div class="cell-output cell-output-stdout">
<pre><code>This is a: titlis.
Model predicts that it is a: titlis.
Probability it's a titlis: 0.9990
</code></pre>
</div>
</div>
<p>Not bad. Correct 3/4.</p>
<div id="cell-53" class="cell" data-quarto-private-1="{&quot;key&quot;:&quot;execution&quot;,&quot;value&quot;:{&quot;iopub.execute_input&quot;:&quot;2025-10-21T12:26:00.989329Z&quot;,&quot;iopub.status.busy&quot;:&quot;2025-10-21T12:26:00.988243Z&quot;,&quot;iopub.status.idle&quot;:&quot;2025-10-21T12:42:46.149857Z&quot;,&quot;shell.execute_reply&quot;:&quot;2025-10-21T12:42:46.148720Z&quot;,&quot;shell.execute_reply.started&quot;:&quot;2025-10-21T12:26:00.989297Z&quot;}}" data-trusted="true" data-execution_count="62">
<div class="code-copy-outer-scaffold"><div class="sourceCode cell-code" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb38-1">learn.fine_tune(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span></code></pre></div></div>
<div class="cell-output cell-output-display">

<style>
    /* Turns off some styling */
    progress {
        /* gets rid of default border in Firefox and Opera. */
        border: none;
        /* Needs to be in here for Safari polyfill so background images work as expected. */
        background-size: auto;
    }
    progress:not([value]), progress:not([value])::-webkit-progress-bar {
        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);
    }
    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {
        background: #F44336;
    }
</style>
</div>
<div class="cell-output cell-output-display">
<table class="dataframe caption-top table table-sm table-striped small" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th">epoch</th>
<th data-quarto-table-cell-role="th">train_loss</th>
<th data-quarto-table-cell-role="th">valid_loss</th>
<th data-quarto-table-cell-role="th">error_rate</th>
<th data-quarto-table-cell-role="th">time</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>0</td>
<td>0.046293</td>
<td>0.733727</td>
<td>0.200000</td>
<td>02:09</td>
</tr>
</tbody>
</table>
</div>
<div class="cell-output cell-output-display">

<style>
    /* Turns off some styling */
    progress {
        /* gets rid of default border in Firefox and Opera. */
        border: none;
        /* Needs to be in here for Safari polyfill so background images work as expected. */
        background-size: auto;
    }
    progress:not([value]), progress:not([value])::-webkit-progress-bar {
        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);
    }
    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {
        background: #F44336;
    }
</style>
</div>
<div class="cell-output cell-output-display">
<table class="dataframe caption-top table table-sm table-striped small" data-border="1">
<thead>
<tr class="header">
<th data-quarto-table-cell-role="th">epoch</th>
<th data-quarto-table-cell-role="th">train_loss</th>
<th data-quarto-table-cell-role="th">valid_loss</th>
<th data-quarto-table-cell-role="th">error_rate</th>
<th data-quarto-table-cell-role="th">time</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>0</td>
<td>0.027783</td>
<td>0.858846</td>
<td>0.185714</td>
<td>02:56</td>
</tr>
<tr class="even">
<td>1</td>
<td>0.038438</td>
<td>1.451459</td>
<td>0.242857</td>
<td>03:03</td>
</tr>
<tr class="odd">
<td>2</td>
<td>0.151360</td>
<td>1.095311</td>
<td>0.200000</td>
<td>02:50</td>
</tr>
<tr class="even">
<td>3</td>
<td>0.185351</td>
<td>1.092717</td>
<td>0.157143</td>
<td>02:52</td>
</tr>
<tr class="odd">
<td>4</td>
<td>0.166083</td>
<td>0.955429</td>
<td>0.157143</td>
<td>02:51</td>
</tr>
</tbody>
</table>
</div>
</div>
<div id="cell-54" class="cell" data-quarto-private-1="{&quot;key&quot;:&quot;execution&quot;,&quot;value&quot;:{&quot;iopub.execute_input&quot;:&quot;2025-10-21T12:46:13.893035Z&quot;,&quot;iopub.status.busy&quot;:&quot;2025-10-21T12:46:13.891925Z&quot;,&quot;iopub.status.idle&quot;:&quot;2025-10-21T12:46:15.142382Z&quot;,&quot;shell.execute_reply&quot;:&quot;2025-10-21T12:46:15.141175Z&quot;,&quot;shell.execute_reply.started&quot;:&quot;2025-10-21T12:46:13.893000Z&quot;}}" data-trusted="true" data-execution_count="63">
<div class="code-copy-outer-scaffold"><div class="sourceCode cell-code" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb39-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, class_name <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(dls.vocab):</span>
<span id="cb39-2">    mountain_name,_,probs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> learn.predict(PILImage.create(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>class_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.jpg"</span>))</span>
<span id="cb39-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"This is a: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>class_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">."</span>)</span>
<span id="cb39-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Model predicts that it is a: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>mountain_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">."</span>)</span>
<span id="cb39-5">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Probability it's a </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>class_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>probs[i]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.4f}</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div></div>
<div class="cell-output cell-output-display">

<style>
    /* Turns off some styling */
    progress {
        /* gets rid of default border in Firefox and Opera. */
        border: none;
        /* Needs to be in here for Safari polyfill so background images work as expected. */
        background-size: auto;
    }
    progress:not([value]), progress:not([value])::-webkit-progress-bar {
        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);
    }
    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {
        background: #F44336;
    }
</style>
</div>
<div class="cell-output cell-output-display">

</div>
<div class="cell-output cell-output-stdout">
<pre><code>This is a: assiniboine.
Model predicts that it is a: assiniboine.
Probability it's a assiniboine: 0.8058
</code></pre>
</div>
<div class="cell-output cell-output-display">

<style>
    /* Turns off some styling */
    progress {
        /* gets rid of default border in Firefox and Opera. */
        border: none;
        /* Needs to be in here for Safari polyfill so background images work as expected. */
        background-size: auto;
    }
    progress:not([value]), progress:not([value])::-webkit-progress-bar {
        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);
    }
    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {
        background: #F44336;
    }
</style>
</div>
<div class="cell-output cell-output-display">

</div>
<div class="cell-output cell-output-stdout">
<pre><code>This is a: matterhorn.
Model predicts that it is a: matterhorn.
Probability it's a matterhorn: 1.0000
</code></pre>
</div>
<div class="cell-output cell-output-display">

<style>
    /* Turns off some styling */
    progress {
        /* gets rid of default border in Firefox and Opera. */
        border: none;
        /* Needs to be in here for Safari polyfill so background images work as expected. */
        background-size: auto;
    }
    progress:not([value]), progress:not([value])::-webkit-progress-bar {
        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);
    }
    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {
        background: #F44336;
    }
</style>
</div>
<div class="cell-output cell-output-display">

</div>
<div class="cell-output cell-output-stdout">
<pre><code>This is a: mont blanc.
Model predicts that it is a: mont blanc.
Probability it's a mont blanc: 1.0000
</code></pre>
</div>
<div class="cell-output cell-output-display">

<style>
    /* Turns off some styling */
    progress {
        /* gets rid of default border in Firefox and Opera. */
        border: none;
        /* Needs to be in here for Safari polyfill so background images work as expected. */
        background-size: auto;
    }
    progress:not([value]), progress:not([value])::-webkit-progress-bar {
        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);
    }
    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {
        background: #F44336;
    }
</style>
</div>
<div class="cell-output cell-output-display">

</div>
<div class="cell-output cell-output-stdout">
<pre><code>This is a: titlis.
Model predicts that it is a: titlis.
Probability it's a titlis: 1.0000
</code></pre>
</div>
</div>
<p>The model did an impressive job. Well done! üëèüèª</p>


</section>
</section>
</section>

 ]]></description>
  <category>fastai</category>
  <guid>https://sasipimt.github.io/blog/posts/fastai/part1/mountain_classifier.html</guid>
  <pubDate>Mon, 20 Oct 2025 00:00:00 GMT</pubDate>
  <media:content url="https://sasipimt.github.io/blog/posts/fastai/images/matterhorn.jpg" medium="image" type="image/jpeg"/>
</item>
</channel>
</rss>
